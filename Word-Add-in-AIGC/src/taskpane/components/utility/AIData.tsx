import { AxiosRequestConfig } from "axios";
import { _apiKey, _deployment, _endpoint } from "../Home";
import { message } from "antd";
import { post } from "./Request";

//change the apiKey/endpoint/deployment of Azure AI service to yours
export const apiKey = ""
export const endpoint = ""
export const deployment = ""

export const dropdownMenus = {
    title: [
        {
            desc: "Add a predefined title",
            key: "titlePredefined"
        },
        {
            type: "divider"
        },
        {
            desc: "Add a title generated by AI",
            key: "titleAI"
        }
    ],
    comment: [
        {
            desc: "Add a predefined comment",
            key: "commentPredefined"
        },
        {
            type: "divider"
        },
        {
            desc: "Add a comment generated by AI",
            key: "commentAI"
        }
    ],
    citation: [
        {
            desc: "Add a predefined citation",
            key: "citationPredefined"
        },
        {
            type: "divider"
        },
        {
            desc: "Add a citation generated by AI",
            key: "citationAI"
        }
    ]
}

export const AzureAI = {
    apiversion: "2023-05-15",
    apikey: apiKey,
    endpoint: endpoint,
    deployment: deployment,
};

export interface AzureTextGenAPI {
    prompt: string;
    max_tokens: number;
}

export interface AzureTextGenItem {
    text: string;
    index: number;
    finish_reason: string;
    logprobs: any;
}

export interface AzureTextGenRes {
    id: string;
    object: string;
    created: number;
    model: string;
    choices: AzureTextGenItem[];
    usage: {
        prompt_tokens: number;
        completion_tokens: number;
        total_tokens: number;
    };
}

export const generateText = (content: string, maxTokens: number = 1000) => {
    let requestBody: AzureTextGenAPI = { prompt: content, max_tokens: maxTokens };
    let config: AxiosRequestConfig = {
        headers: {
            "api-key": AzureAI.apikey === "" ? _apiKey : AzureAI.apikey,
            "Content-Type": "application/json",
        },
        params: {
            "api-version": AzureAI.apiversion,
        },
    };
    let url = (AzureAI.endpoint === "" ? _endpoint : AzureAI.endpoint)
        + "/openai/deployments/"
        + (AzureAI.deployment === "" ? _deployment : AzureAI.deployment)
        + "/completions";

    return post(url, requestBody, config).then((res) => {
        if (res.status == 200 && res.data != null) {
            let resObj: AzureTextGenRes = res.data;
            if (resObj.choices == null || resObj.choices.length == 0) {
                message.error("get no choices from the azure service.");
            }
            return resObj.choices[0].text.replace("\n\r\n", "").replace("\n", "").replace("\n", "");
        } else {
            throw Error(res.data.error);
        }
    });
};