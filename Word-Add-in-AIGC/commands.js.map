{"version":3,"file":"commands.js","mappings":"YACA,IAAIA,EAAsB,CAAC,ECD3BA,EAAoBC,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOC,MAAQ,IAAIC,SAAS,cAAb,EAChB,CAAE,MAAOC,GACR,GAAsB,iBAAXC,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCOxBC,OAAOC,SAAQ,WACb,KAuBuB,oBAATC,KACVA,KACkB,oBAAXH,OACPA,YACkB,IAAXI,EAAAA,EACPA,EAAAA,OACAC,GAMJC,OA5BF,SAAgBC,GACd,IAAMC,EAA6C,CACjDC,KAAMR,OAAOS,aAAaC,4BAA4BC,qBACtDJ,QAAS,oBACTK,KAAM,aACNC,YAAY,GAIdb,OAAOc,QAAQC,QAAQC,KAAKC,qBAAqBC,aAAa,SAAUX,GAGxED,EAAMa,WACR,C","sources":["webpack://office-addin-taskpane-react/webpack/bootstrap","webpack://office-addin-taskpane-react/webpack/runtime/global","webpack://office-addin-taskpane-react/./src/commands/commands.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global global, Office, self, window */\r\n\r\nOffice.onReady(() => {\r\n  // If needed, Office.js is ready to be called\r\n});\r\n\r\n/**\r\n * Shows a notification when the add-in command is executed.\r\n * @param event\r\n */\r\nfunction action(event: Office.AddinCommands.Event) {\r\n  const message: Office.NotificationMessageDetails = {\r\n    type: Office.MailboxEnums.ItemNotificationMessageType.InformationalMessage,\r\n    message: \"Performed action.\",\r\n    icon: \"Icon.80x80\",\r\n    persistent: true,\r\n  };\r\n\r\n  // Show a notification message\r\n  Office.context.mailbox.item.notificationMessages.replaceAsync(\"action\", message);\r\n\r\n  // Be sure to indicate when the add-in command function is complete\r\n  event.completed();\r\n}\r\n\r\nfunction getGlobal() {\r\n  return typeof self !== \"undefined\"\r\n    ? self\r\n    : typeof window !== \"undefined\"\r\n    ? window\r\n    : typeof global !== \"undefined\"\r\n    ? global\r\n    : undefined;\r\n}\r\n\r\nconst g = getGlobal() as any;\r\n\r\n// The add-in command functions need to be available in global scope\r\ng.action = action;\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","Office","onReady","self","global","undefined","action","event","message","type","MailboxEnums","ItemNotificationMessageType","InformationalMessage","icon","persistent","context","mailbox","item","notificationMessages","replaceAsync","completed"],"sourceRoot":""}